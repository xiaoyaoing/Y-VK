#version 460
struct GBuffer {
    vec3 position;
    uint material_idx;
    vec2 uv;
    vec3 normal;
};
layout(std430, binding = 5) buffer _GBuffer {
    GBuffer d[];
} gbuffer;

layout(local_size_x = 64, local_size_y = 1,
local_size_z = 1) in;

void main() {
    const uint idx = gl_GlobalInvocationID.x;
    if (idx >= gbuffer.d.length()) {
        return;
    }
    gbuffer.d[idx].material_idx = -1;
    gbuffer.d[idx].position = vec3(0.0);
    gbuffer.d[idx].uv = vec2(0.0);
    gbuffer.d[idx].normal = vec3(0.0);
}